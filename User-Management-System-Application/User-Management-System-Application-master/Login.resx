<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vww60jSyRcEaAAAAAElFTkSuQmCC
</value>
  </data>
</root>